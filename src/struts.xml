<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">
<struts>

    <!-- 设置自动装载国际化 -->
    <constant name="struts.i18n.reload" value="true" />
    <!-- 设置动态方法调用 -->
    <constant name="struts.enable.DnamicMethodInvocation" value="true" />

    <!-- 指定每次配置文件更改后，自动重新加载 -->
    <constant name="struts.configuration.xml.reload" value="true" />
    <!-- 设置访问方式 -->
    <constant name="struts.action.extension" value="action,," />
    <!-- 去除多余的格式 -->
    <constant name="struts.ui.theme" value="simple" />
    <!--设置上传文件大小20MB，默认为2MB大小 -->
    <constant name="struts.multipart.maxSize" value="20971520"></constant>
    <!--//加上这一句修改strust就不需要重启服务。-->
    <constant name="struts.devMode" value="true" />
    <!-- 设置编码格式，防止上传的文件名为中文时是乱码 -->
    <constant name="struts.i18n.encoding" value="UTF-8"/>
    <!-- 指定resource资源文件的名称-->
    <constant name="struts.custom.i18n.resources" value="message"/>
    <!-- struts的action配置文件 -->
    <!-- 将action托管给spring -->
    <constant name="struts.objectFactory" value="spring" />


    <include file="web_struts.xml"/>
    <include file="api_struts.xml"/>
    <include file="quarter_struts.xml"/>

    <!--如果action不存在，则跳转到默认action-->
    <package name="default" namespace="/" extends="json-default">

        <interceptors>
            <interceptor name="reqCheck" class="utils.RequestInterceptor"/>
            <interceptor-stack name="reqStack">
                <interceptor-ref name="reqCheck"/>
                <interceptor-ref name="defaultStack"/>
            </interceptor-stack>
        </interceptors>
        <default-interceptor-ref name="reqStack"/>
        <default-action-ref name="notFound" />
        <action name="notFound" class="notFound" method="notFound">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

    </package>
    <!-- 所有的action都应该放在对应的package下 -->
    <!--action的class属性不再是具体的类,而是spring配置文件配置的bean id  pakage name 貌似不起作用-->
    <package name="base" namespace="/user" extends="json-default,default">

        <!--<interceptors>-->
            <!--&lt;!&ndash; 默认拦截器 &ndash;&gt;-->
            <!--<interceptor name="authority" class="utils.TokenInterceptor" />-->

            <!--&lt;!&ndash; 拦截器栈 &ndash;&gt;-->
            <!--<interceptor-stack name="myStack">-->
                <!--<interceptor-ref name="defaultStack" />-->
                <!--<interceptor-ref name="authority" />-->
            <!--</interceptor-stack>-->

        <!--</interceptors>-->
        <!--<default-interceptor-ref name="myStack" />-->

        <action name="add" class="user" method="add">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <!--注册-->
        <action name="reg" class="user" method="register">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--登录-->
        <action name="login" class="user" method="login">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>


        <!--上传-->
        <action name="getUserInfo" class="user" method="getUserInfo">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--修改昵称-->
        <action name="updateNickName" class="user" method="updateNickName">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--获取地址列表哦-->
        <action name="getAddrs" class="user" method="getAddrs">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--添加地址-->
        <action name="addAddr" class="user" method="addAddr">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--更新地址-->
        <action name="updateAddr" class="user" method="updateAddr">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--默认地址-->
        <action name="setAddr" class="user" method="setAddr">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--获取默认地址-->
        <action name="getDefaultAddr" class="user" method="getDefaultAddr">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

    </package>

    <package name="product" namespace="/product" extends="json-default,default">


        <action name="getCatagory" class="product" method="getCatagory">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="getProductCatagory" class="product" method="getProductCatagory">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="getProducts" class="product" method="getProducts">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="getProductDetail" class="product" method="getProductDetail">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="addCart" class="product" method="addCart">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="deleteCart" class="product" method="deleteCart">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="getCarts" class="product" method="getCarts">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="updateCarts" class="product" method="updateCarts">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>

        <action name="createOrder" class="product" method="createOrder">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <action name="updateOrder" class="product" method="updateOrder">
        <result type="json">
            <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
        </result>
    </action>
        <action name="getOrders" class="product" method="getOrders">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
        <!--搜索商品-->
        <action name="searchProducts" class="product" method="searchProducts">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
    </package>

    <package name="ad" namespace="/ad" extends="json-default,default">
        <action name="getAd" class="ad" method="getAd">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
    </package>

    <package name="image" namespace="/image" extends="json-default,default">
        <action name="getImages" class="image" method="getImages">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
    </package>

    <package name="upload" namespace="/file" extends="json-default,default">

        <action name="upload" class="file" method="upload">
            <interceptor-ref name="fileUpload">
                <param name ="allowedTypes">
                    image/*,image/bmp,image/png,image/gif,image/jpeg,image/jpg,image/pjpeg,application/octet-stream
                </param >
                <param name="maximumSize">
                    2097152
                </param>
            </interceptor-ref>
            <interceptor-ref name ="fileUploadStack"/>
            <interceptor-ref name = "defaultStack"/>
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
    </package>
    <package name="version" namespace="/version" extends="json-default,default">
        <action name="getVersion" class="version" method="getVersion">
            <result type="json">
                <param name="root">jsonData</param>     <!-- 这里的jsonData对应action里要返回的map对象 -->
            </result>
        </action>
    </package>

</struts>