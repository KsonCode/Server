<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 指定所上传文件的总大小不能超过2000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="2048000" />
        <!-- 设置在文件上传时允许写到内存中的最大值，以字节为单位计算，默认是10240 -->
        <!-- 但是经实验，上传文件大小若小于此参数，则不会生成临时文件，很尴尬，故改为2048 -->
        <property name="maxInMemorySize" value="100" />


    </bean>

    <bean class="test.TestService" id="testService">
        <property name="name" value="spring"></property>
    </bean>


    <!-- data connection -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/kson"></property>
        <property name="username" value="root"/>
        <property name="password" value="waf521xqc"/>
    </bean>


    <!-- session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/kson</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>bean.UserEntity</value>
                <value>bean.AdEntity</value>
                <value>bean.CatagoryEntity</value>
                <value>bean.ProductcatagoryEntity</value>
                <value>bean.ProductsubcatagoryEntity</value>
                <value>bean.SellerEntity</value>
                <value>bean.CarEntity</value>
                <value>bean.OrdersEntity</value>
                <value>bean.AddrEntity</value>
                <value>bean.ProductEntity</value>
                <value>bean.study.ImagesEntity</value>
            </list>
        </property>


    </bean>

    <!--hibernate测试加入-->
    <bean id="userImpl" class="service.UserImpl">
        <property name="sf" ref="sessionFactory"></property>
    </bean>

    <!--userAction对应struts里面的class，user已经赋值-->
    <bean id="user" class="action.UserAction">
        <property name="user" ref="userImpl"></property>
    </bean>

    <!--userAction对应struts里面的class，user已经赋值-->
    <bean id="file" class="action.UploadAction">
        <property name="user" ref="userImpl"></property>
    </bean>
    <!--productAction对应struts里面的class，user已经赋值-->
    <bean id="product" class="action.ProductAction">
        <property name="user" ref="userImpl"></property>
    </bean>

    <bean id="ad" class="action.AdAction">
        <property name="user" ref="userImpl"/>
    </bean>

    <bean id="notFound" class="action.NotFoundErrerAction">
    </bean>

    <bean id="image" class="action.ImageAction">
        <property name="user" ref="userImpl"/>
    </bean>
</beans>